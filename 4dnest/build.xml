<?xml version="1.0" encoding="utf-8"?>
<project name="4Dnest" default="autobuild" xmlns:android="antlib:com.googlecode.autoandroid.ant">
	<taskdef uri="antlib:com.googlecode.autoandroid.ant" classpath="/home/autobuild/antlib/android-ant-1.0-rc5.jar"/>
	<android:home location="/home/autobuild/antlib/android-sdk-linux"/>

	<!-- Dependencies -->

	<fileset dir="lib" id="main.jars">
		<include name="/home/autobuild/antlib/android-sdk-linux/android.jar"/>
	</fileset>
	<fileset dir="/usr/share/java/" id="test.jars">
		<include name="ant-junit.jar"/>
		<include name="junit4.jar"/>
	</fileset>

	<!-- Rules -->

        <target name="git-pull" description="Pull the latest changes from github.">
                <exec executable="/usr/bin/git">
                        <arg value="pull"/>
                </exec>
        </target>

	<target name="clean" description="Delete the output directories.">
		<delete dir="../target"/>
		<delete dir="../reports"/>
		<delete dir="../javadocs"/>
	</target>

	<target name="resource-src" description="Generate the R.java file for this project's resources.">
		<exec executable="/home/autobuild/antlib/android-sdk-linux/platform-tools/aapt">
	<!--	<android:aapt> -->
			<arg value="package"/>
			<arg value="-m"/>
			<arg value="-J"/>
			<arg file="src"/> <!-- Create R.java in the source directory -->
			<arg value="-M"/>
			<arg file="AndroidManifest.xml"/>
			<arg value="-S"/>
			<arg file="res"/>
			<arg value="-I"/>
			<arg file="${android-home}/android.jar"/>
	<!--	</android:aapt> -->
		</exec>
	</target>

	<target name="compile-main" depends="resource-src" description="Compile the java source.">
		<mkdir dir="../target/main-classes"/>
		<javac encoding="ascii" target="1.7" debug="true" extdirs=""
				srcdir="src" destdir="../target/main-classes"
				bootclasspath="${android-home}/android.jar">
			<classpath>
				<fileset refid="main.jars"/>
			</classpath>
		</javac>
	</target>

	<target name="dex" depends="compile-main" description="Convert the .class files into .dex files.">
		<property name="classes.dex" location="../target/classes.dex"/>
		<exec executable="/home/autobuild/antlib/android-sdk-linux/platform-tools/dx">
	<!--	<android:dx inputref="main.jars"> -->
			<arg value="--dex"/>
			<arg value="--output=${classes.dex}"/>
			<arg path="../target/main-classes"/>
	<!--	</android:dx> -->
		</exec>
	</target>

	<target name="package-res" description="Put the project's resources into the output package file.">
		<exec executable="/home/autobuild/antlib/android-sdk-linux/platform-tools/aapt">
	<!--	<android:aapt> -->
			<arg value="package"/>
			<arg value="-f"/>
			<arg value="-M"/>
			<arg file="AndroidManifest.xml"/>
			<arg value="-S"/>
			<arg file="res"/>
			<!-- No assets directory -->
			<arg value="-I"/>
			<arg file="${android-home}/android.jar"/>
			<arg value="-F"/>
			<arg file="../target/4Dnest.ap_"/>
	<!--	</android:aapt> -->
		</exec>
	</target>

	<target name="package-apk" depends="dex, package-res" description="Package the application and sign it with a debug key.">
		<exec executable="/home/autobuild/antlib/android-sdk-linux/tools/apkbuilder">
	<!--	<android:apk-builder> -->
			<arg file="../target/4Dnest.apk"/>
			<arg value="-z"/>
			<arg file="../target/4Dnest.ap_"/>
			<arg value="-f"/>
			<arg file="../target/classes.dex"/>
			<arg value="-rf"/>
			<arg file="src"/>
			<arg value="-rj"/>
			<arg file="lib"/>
	<!--	</android:apk-builder> -->
		</exec>
	</target>
	
	<target name="javadoc" description="Generate javadoc documentation">
		<delete dir="../javadocs"/>
		<mkdir dir="../javadocs"/>
		<javadoc sourcepath="src" destdir="../javadocs">
			<link href="http://download.oracle.com/javase/7/docs/api"/>
			<link href="http://www.androidjavadoc.com/2.3"/>
		</javadoc>
	</target>

	<target name="compile-tests" depends="compile-main" description="Compile the source for the tests.">
		<mkdir dir="../target/test-classes"/>
		<javac encoding="ascii" target="1.7" debug="true"
				srcdir="../tests/src/org/fourdnest/androidclient/test" destdir="../target/test-classes">
			<classpath>
				<fileset refid="main.jars"/>
				<fileset refid="test.jars"/>
				<pathelement location="../target/main-classes"/> 
			</classpath>
		</javac>
	</target>

	<target name="junit-novm" depends="compile-tests" description="Junit tests that don't require a virtual machine.">
		<mkdir dir="../reports/junit_novm"/>
		<junit printsummary="yes" fork="yes" haltonfailure="no">
	          <classpath>
		    <pathelement location="../target/test-classes"/>
		    <pathelement location="../target/main-classes"/>
		    <fileset refid="main.jars"/>
		    <fileset refid="test.jars"/>
	  	  </classpath>
		  <formatter type="plain"/>
		  <batchtest todir="../reports/junit_novm">
		    <fileset dir="../tests/src/org/fourdnest/androidclient/test">
		      <include name="**/*Test*.java"/>
		    </fileset>
		  </batchtest>
		</junit>
	</target>


	<target name="autobuild" depends="clean, git-pull, package-apk, javadoc" description="Autobuild"/>

<!-- The local.properties file is created and updated by the 'android'
     tool.
     It contains the path to the SDK. It should *NOT* be checked into
     Version Control Systems. -->
    <property file="local.properties" />

    <!-- The build.properties file can be created by you and is never touched
         by the 'android' tool. This is the place to change some of the
         default property values used by the Ant rules.
         Here are some properties you may want to change/update:

         source.dir
             The name of the source directory. Default is 'src'.
         out.dir
             The name of the output directory. Default is 'bin'.

         Properties related to the SDK location or the project target should
         be updated using the 'android' tool with the 'update' action.

         This file is an integral part of the build system for your
         application and should be checked into Version Control Systems.

         -->
    <property file="build.properties" />

    <!-- The default.properties file is created and updated by the 'android'
         tool, as well as ADT.
         This file is an integral part of the build system for your
         application and should be checked into Version Control Systems. -->
    <property file="default.properties" />


    <!-- Required pre-setup import -->
    <import file="${sdk.dir}/tools/ant/pre_setup.xml" />


<!-- extension targets. Uncomment the ones where you want to do custom work
     in between standard targets -->
<!--
    <target name="-pre-build">
    </target>
    <target name="-pre-compile">
    </target>

    [This is typically used for code obfuscation.
     Compiled code location: ${out.classes.absolute.dir}
     If this is not done in place, override ${out.dex.input.absolute.dir}]
    <target name="-post-compile">
    </target>
-->

    <!-- Execute the Android Setup task that will setup some properties
         specific to the target, and import the build rules files.

         The rules file is imported from
            <SDK>/tools/ant/
         Depending on the project type it can be either:
         - main_rules.xml
         - lib_rules.xml
         - test_rules.xml

         To customize existing targets, there are two options:
         - Customize only one target:
             - copy/paste the target into this file, *before* the
               <setup> task.
             - customize it to your needs.
         - Customize the whole script.
             - copy/paste the content of the rules files (minus the top node)
               into this file, *after* the <setup> task
             - disable the import of the rules by changing the setup task
               below to <setup import="false" />.
             - customize to your needs.
    -->
    <setup />

</project>
